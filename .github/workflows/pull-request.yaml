name: Pull Request

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - charts/**

permissions:
  contents: read

concurrency:
  group: pull-request-${GITHUB_REF}
  cancel-in-progress: false

env:
  # renovate: datasource=github-releases depName=asdf-vm/asdf
  ASDF_VERSION: 0.18.0
  # renovate: datasource=github-releases depName=helm/helm
  HELM_VERSION: v3.18.6
  # renovate: datasource=github-tags depName=python/cpython
  PYTHON_VERSION: 3.13.7
  # renovate: datasource=github-releases depName=helm/chart-testing-action
  CHART_TESTING_VERSION: v3.13.0
  # renovate: datasource=github-releases depName=adrienverge/yamllint
  CHART_TESTING_YAMLLINT_VERSION: v1.37.1
  # renovate: datasource=github-releases depName=23andMe/Yamale
  CHART_TESTING_YAMALE_VERSION: 6.0.0

jobs:
  metadata-collector:
    uses: ./.github/workflows/metadata-collector.yaml

  pre-commit:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Setup ASDF
        uses: asdf-vm/actions/setup@1902764435ca0dd2f3388eea723a4f92a4eb8302 # v4.0.0
        with:
          asdf_version: ${{ env.ASDF_VERSION }}

      - name: Cache ASDF
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: asdf-cache
        with:
          # https://github.com/asdf-vm/asdf/blob/master/.gitignore
          path: |
            ~/.asdf/installs
            ~/.asdf/plugins
            ~/.asdf/shims
            ~/.cache/pip
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
          restore-keys: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}-

      - name: Install ASDF
        uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302 # v4.0.0
        if: ${{ steps.asdf-cache.outputs.cache-hit != 'true' }}
        with:
          asdf_version: ${{ env.ASDF_VERSION }}

      - name: Reshim installed ASDF tools
        shell: bash
        run: asdf reshim

      - name: Cache pre-commit
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}-

      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for GH API calls quota
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for zizmor

  artifacthub-lint:
    runs-on: ubuntu-24.04
    container:
      image: docker.io/artifacthub/ah:v1.21.0 # referencing version via env variable not supported in GHA
      options: --user=root
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2 # pragma: allowlist secret
        with:
          persist-credentials: false

      - name: Run Artifact Hub lint
        working-directory: ./charts/
        run: ah lint

  chart-testing:
    runs-on: ubuntu-24.04
    needs: [pre-commit, artifacthub-lint]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2 # pragma: allowlist secret
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0 # pragma: allowlist sercret
        with:
          version: ${{ env.HELM_VERSION }}

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0 # pragma: allowlist secret
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0 # pragma: allowlist secret
        with:
          version: ${{ env.CHART_TESTING_VERSION }}
          yamllint_version: ${{ env.CHART_TESTING_YAMLLINT_VERSION }}
          yamale_version: ${{ env.CHART_TESTING_YAMALE_VERSION }}

      - name: Run chart-testing (lint)
        run: ct lint --target-branch main --validate-maintainers=false --check-version-increment=false --lint-conf .yamllint.yaml

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0 # pragma: allowlist secret

      # FIXME config: Place custom steps to install CRDs or other dependencies here

      - name: Run chart-testing (install)
        run: ct install --target-branch main

  release:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    needs: [chart-testing, metadata-collector]
    strategy:
      fail-fast: false
      matrix:
        chart: ${{ fromJSON(needs.metadata-collector.outputs.charts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: ${{ env.HELM_VERSION }}

      - name: GitHub Slug Action
        uses: rlespinasse/github-slug-action@955b5ba4560860f8a633bd24190941f16016e42c # v5.1.0

      - name: Publish Helm chart
        # FIXME config: Add dependency repositories
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${GITHUB_ACTOR} --password-stdin

          helm dependency build charts/${CHART_NAME}
          helm package charts/${CHART_NAME}
          helm push "$(realpath ${CHART_NAME}-*.tgz)" oci://ghcr.io/${REPOSITORY_NAME}

          helm registry logout ghcr.io
        env:
          REPOSITORY_NAME: ${{ github.repository }}/${{ env.GITHUB_EVENT_REF_SLUG || env.GITHUB_HEAD_REF_SLUG }}
          CHART_NAME: ${{ matrix.chart }}
