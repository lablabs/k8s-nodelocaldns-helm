name: PR - release charts

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    paths:
      - 'charts/node-local-dns/**'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - name: Add dependency chart repos
        run: |
          helm repo add stable https://charts.helm.sh/stable
          helm repo add incubator https://charts.helm.sh/incubator
      
      - name: Get version
        id: get_version
        run: |
          version=$(grep 'version: ' charts/node-local-dns/Chart.yaml | awk '{print $2}')
          branch=$GITHUB_HEAD_REF
          
          pr_version="${version}-${branch}"
          echo "Defining PR version $pr_version for branch $branch"

          echo "Updating charts/node-local-dns/Chart.yaml version to ${pr_version}"
          sed -i "s/^version:.*/version: ${pr_version}/" charts/node-local-dns/Chart.yaml
          echo "pr_version=$pr_version" >> $GITHUB_ENV

      - name: Check and remove existing PR release
        run: |
          echo "Checking release $pr_version existence in $GITHUB_REPOSITORY"
          release_id=$( gh api -H "Accept: application/vnd.github.v3+json" /repos/$GITHUB_REPOSITORY/releases/tags/node-local-dns-$pr_version | jq -r .id )
          if [ "$release_id" != "null" ]; then
            echo "Release node-local-dns-$pr_version exists. Deleting..."
            gh api -X DELETE /repos/$GITHUB_REPOSITORY/releases/$release_id
            
            echo "Deleting tag node-local-dns-$pr_version..."
            gh api -X DELETE /repos/$GITHUB_REPOSITORY/git/refs/tags/node-local-dns-$pr_version
          else
            echo "Release $pr_version does not exist. Continuing..."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
